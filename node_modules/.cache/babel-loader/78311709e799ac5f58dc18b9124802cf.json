{"ast":null,"code":"var _jsxFileName = \"/Users/carloseduardoloreshernandez/Desktop/Apps/albumApp/album-app/src/components/AlbumContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport AlbumDetails from \"./AlbumDetails\";\nimport { getOneAlbum } from \"../actions\";\n\nclass AlbumContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getAlbum = albumId => {\n      // console.log(this.props.album)\n      return this.props.getAlbum(albumId);\n    };\n  }\n\n  componentDidMount() {\n    const albumId = this.props.match.params.albumId;\n    console.log(this.props.album.length !== 0 ? this.props.album : null);\n    this.props.getOneAlbum(albumId);\n  }\n\n  render() {\n    let matchId = this.props.album.album.filter(album => album.albumId === +this.props.match.params.albumid);\n    console.log(Array.isArray(matchId));\n    return React.createElement(\"div\", {\n      className: \"col-sm-10 col-md-12 col-lg-12 album\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, matchId.map(album => React.createElement(AlbumDetails, {\n      key: album.id,\n      album: album,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    album: state.album\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneAlbum\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumContainer);","map":{"version":3,"sources":["/Users/carloseduardoloreshernandez/Desktop/Apps/albumApp/album-app/src/components/AlbumContainer.js"],"names":["React","Component","connect","AlbumDetails","getOneAlbum","AlbumContainer","getAlbum","albumId","props","componentDidMount","match","params","console","log","album","length","render","matchId","filter","albumid","Array","isArray","map","id","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAIA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOnCK,QAPmC,GAOxBC,OAAO,IAAI;AACnB;AACC,aAAO,KAAKC,KAAL,CAAWF,QAAX,CAAoBC,OAApB,CAAP;AACH,KAVkC;AAAA;;AACnCE,EAAAA,iBAAiB,GAAE;AAAA,UACPF,OADO,GACK,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MADtB,CACPJ,OADO;AAEfK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,KAA4B,CAA5B,GAAgC,KAAKP,KAAL,CAAWM,KAA3C,GAAmD,IAA/D;AACA,SAAKN,KAAL,CAAWJ,WAAX,CAAuBG,OAAvB;AAEH;;AAMDS,EAAAA,MAAM,GAAE;AAEJ,QAAIC,OAAO,GAAG,KAAKT,KAAL,CAAWM,KAAX,CAAiBA,KAAjB,CAAuBI,MAAvB,CAA8BJ,KAAK,IAAEA,KAAK,CAACP,OAAN,KAAkB,CAAC,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBQ,OAAhF,CAAd;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAZ;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEHA,OAAO,CAACK,GAAR,CAAYR,KAAK,IAAG,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAK,CAACS,EAAzB;AAA6B,MAAA,KAAK,EAAET,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CAFG,CADJ,CADJ;AASH;;AA3BkC;;AAkCvC,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7Bb,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,SAAO;AACHX,IAAAA,KAAK,EAAEW,KAAK,CAACX;AADV,GAAP;AAIH,CAND;;AAQA,MAAMY,kBAAkB,GAAG;AACvBtB,EAAAA;AADuB,CAA3B;AAIA,eAAeF,OAAO,CAClBsB,eADkB,EAElBE,kBAFkB,CAAP,CAGbrB,cAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from \"react-redux\"\nimport AlbumDetails from \"./AlbumDetails\"\nimport {getOneAlbum} from \"../actions\"\n\n\n\nclass AlbumContainer extends Component {\n    componentDidMount(){\n        const { albumId } = this.props.match.params\n        console.log(this.props.album.length !== 0 ? this.props.album : null)\n        this.props.getOneAlbum(albumId)\n\n    }\n    getAlbum = albumId => {\n       // console.log(this.props.album)\n        return this.props.getAlbum(albumId)\n    }\n\n    render(){\n       \n        let matchId = this.props.album.album.filter(album=>album.albumId === +this.props.match.params.albumid)\n   \n        console.log(Array.isArray(matchId))\n  \n        return(\n            <div className=\"col-sm-10 col-md-12 col-lg-12 album\">\n                <div className=\"row\">\n            \n            {matchId.map(album=> <AlbumDetails key={album.id} album={album}/>\n           )}\n            </div>\n            </div>\n        )\n    }\n\n\n\n}\n\n\nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        album: state.album\n    }\n\n}\n\nconst mapDispatchToProps = {\n    getOneAlbum\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AlbumContainer)"]},"metadata":{},"sourceType":"module"}